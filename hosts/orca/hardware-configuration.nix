# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, inputs, current, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.supportedFilesystems = [ "ntfs" ];
#  boot.extraModulePackages = with config.boot.kernelPackages; [
#    v4l2loopback
#  ];

  
  # LUKS Encryption
  boot.initrd.luks.devices = {
      enc = {
          device = "/dev/disk/by-uuid/51767fb9-c9eb-4725-8dda-6bffaeb0ef72";
          preLVM = true;
          allowDiscards = true;
      };
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/b3bbf535-f6ea-4a46-bd46-813a542993af";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" "noatime" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/b3bbf535-f6ea-4a46-bd46-813a542993af";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/b3bbf535-f6ea-4a46-bd46-813a542993af";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime" ];
    };

  fileSystems."/home/${current.user}/.local/share/steam" =
    { device = "/dev/disk/by-uuid/b3bbf535-f6ea-4a46-bd46-813a542993af";
      fsType = "btrfs";
      options = [ "subvol=steam" "compress=zstd" "noatime" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/b3bbf535-f6ea-4a46-bd46-813a542993af";
      fsType = "btrfs";
      options = [ "subvol=swap" "noatime" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/2787-FA68";
      fsType = "vfat";
    };

  swapDevices = [ { device = "/swap/swapfile"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  # Enable firmware updates
  hardware.enableAllFirmware = true;
  services.fwupd.enable = true;
}
